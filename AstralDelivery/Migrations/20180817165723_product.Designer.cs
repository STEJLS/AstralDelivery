// <auto-generated />
using System;
using AstralDelivery.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AstralDelivery.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20180817165723_product")]
    partial class product
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("AstralDelivery.Domain.Entities.DeliveryPoint", b =>
                {
                    b.Property<Guid>("Guid");

                    b.Property<int>("Building");

                    b.Property<string>("City");

                    b.Property<string>("Corpus");

                    b.Property<DateTime>("Date");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("Office");

                    b.Property<string>("Street");

                    b.HasKey("Guid");

                    b.ToTable("DeliveryPoints");
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.PasswordRecovery", b =>
                {
                    b.Property<Guid>("Token")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("UserGuid");

                    b.HasKey("Token");

                    b.HasIndex("UserGuid");

                    b.ToTable("PasswordRecoveries");
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Article");

                    b.Property<string>("City");

                    b.Property<string>("Corpus");

                    b.Property<int>("Count");

                    b.Property<DateTime>("DateTime");

                    b.Property<int>("DeliveryType");

                    b.Property<string>("Email");

                    b.Property<int>("Flat");

                    b.Property<string>("House");

                    b.Property<string>("Name");

                    b.Property<int>("PaymentType");

                    b.Property<string>("Phone");

                    b.Property<int>("Price");

                    b.Property<string>("Street");

                    b.HasKey("Guid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("UserGuid");

                    b.Property<DateTime>("Date");

                    b.Property<Guid>("DeliveryPointGuid");

                    b.Property<string>("DeliveryPointName");

                    b.Property<string>("Email");

                    b.Property<bool>("IsActivated");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<string>("Patronymic");

                    b.Property<int>("Role");

                    b.Property<string>("Surname");

                    b.HasKey("UserGuid");

                    b.HasIndex("DeliveryPointGuid");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.WorkTime", b =>
                {
                    b.Property<Guid>("DeliveryPointGuid");

                    b.Property<int>("DayOfWeek");

                    b.Property<TimeSpan>("Begin");

                    b.Property<TimeSpan>("End");

                    b.HasKey("DeliveryPointGuid", "DayOfWeek");

                    b.HasAlternateKey("DayOfWeek", "DeliveryPointGuid");

                    b.ToTable("WorkTimes");
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.PasswordRecovery", b =>
                {
                    b.HasOne("AstralDelivery.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.User", b =>
                {
                    b.HasOne("AstralDelivery.Domain.Entities.DeliveryPoint", "DeliveryPoint")
                        .WithMany("Managers")
                        .HasForeignKey("DeliveryPointGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AstralDelivery.Domain.Entities.WorkTime", b =>
                {
                    b.HasOne("AstralDelivery.Domain.Entities.DeliveryPoint")
                        .WithMany("WorksSchedule")
                        .HasForeignKey("DeliveryPointGuid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
